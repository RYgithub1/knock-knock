%br
%br
%br
%br
%br
%br
%br
%br
%br
%br
%br
-# ==== pairs#index part =============================
.pairIndex
  .pairIndex__pairIndexContent
    -# ---- DoorS title ------------------------
    .pairIndex__pairIndexContent__pairIndexContentTitle
      .pairIndex__pairIndexContent__pairIndexContentTitle__pairIndexContentTitleHead
        %h2.pairIndexTitleHead DoorS
      .pairIndex__pairIndexContent__pairIndexContentTitle__pairIndexContentTitleCode

    -# ---- door hanger list------------------------
    .pairIndex__pairIndexContent__pairIndexContentHanger
      .pairIndex__pairIndexContent__pairIndexContentHanger__pairIndexContentHangerHead
        %i.fas.fa-weight-hanging.pairIndexDoorLogo
        %h3.pairIndexHangerHead hangered doors
      .pairIndex__pairIndexContent__pairIndexContentHanger__pairIndexContentHangerCode

    -# ---- knocked door list ------------------------
    .pairIndex__pairIndexContent__pairIndexContentDoor
      .pairIndex__pairIndexContent__pairIndexContentDoor__pairIndexContentDoorHead
        %i.fas.fa-door-open.pairIndexHangerLogo
        %h3.pairIndexDoorHead knocked doors

      .pairIndex__pairIndexContent__pairIndexContentDoor__pairIndexContentDoorCode

%br
-# - @currentHangers[0]  は、|hanger|に相当  《指針》
%br
- @currentHangers.each do |currentHanger|
  %br
  %br
  1-1.ハンガーかけた日付
  = currentHanger.updated_at
  %br
  1-2.アイコン
  -# ハンガーかけているドアのAbout情報が下記
  - hangerPhoto = Photo.find_by(about_id: currentHanger.about_id)
  -# = image_tag hangerPhoto.image.url, class: "pppppp", size: "30x30"
  -# [0]でなく二重に深い配列かもをターミナルで確認
  %br
  1-3 名前
  - hangerAbout = About.find_by(id: currentHanger.about_id)
  - hangerUser = User.where(id: hangerAbout.user_id)
  = hangerUser[0].name
  -# 配列の中身のハッシュを外す[0]常にひとつしかこない仕様ゆえ、一個上だけは常に[0]
  %br
  1-4.リンク【AZ】
  -# もし渡すのが配列通らないなら、[0]
  = link_to "About", about_path(hangerAbout), class: "pbbbbbbbb"
  %br
  1-5.リンク【pairs#new】ペア作成リンク
  -# もし渡すのが配列通らないなら、[0]
  = link_to "knock-knock?", new_pair_path(hangerAbout), class: "tbbbbbbb"

%br
%br
%br
-# ======================================================
-# - @currentUsersPairs = current_user.users_pairs
-# user_idは４さんのみ  →pair_id
-# - currentUsersPair = current_user.users_pairs[0]
-# - current_user.users_pairs.each do |currentUsersPair|
.zzzzzzzzzz
  - @currentUsersPairs.each       do |currentUsersPair|
    %br
    %br
    2-1.ドア作成日付 -> メッセージ最終日付
    - messages = Message.where(pair_id: currentUsersPair.pair_id)
    - lastMessage = messages.last
    -# 以上は共通かも
    - if lastMessage.blank?
      = currentUsersPair.updated_at
    - else
      = lastMessage.created_at
    %br
    2-2.アイコン
    - upwwn = UsersPair.where(pair_id: currentUsersPair.pair_id).where.not(user_id: current_user.id)[0]
    -# ここから上共通かも
    - aboutUpwwn = About.find_by(user_id: upwwn.user_id)
    - photoAboutUpwwn = Photo.where(about_id: aboutUpwwn.id)[0]
    -# = photoAboutUpwwn.image
    -# = image_tag photoAboutUpwwn.image.url, class: "paaappppp", size: "30x30"
    %br
    2-3.名前
    -# - binding.pry
    - upwwn = UsersPair.where(pair_id: currentUsersPair.pair_id).where.not(user_id: current_user.id)[0]
    - userUpwwn = User.find_by(id: upwwn.user_id)
    = userUpwwn.name
    %br
    2-4.リンク【AZ】
    - aboutUpwwn = About.find_by(user_id: upwwn.user_id)
    -# 共通かも
    = link_to "About", about_path(aboutUpwwn), class: "pbbbbbbbaaaaab"
    %br
    2-5.リンク【KKD】メッセージ画面へのリンク
    = link_to "knock-knock door", pair_messages_path(currentUsersPair.pair_id), class: "pbbbbbbbssssaaaaab"
    %br
    2-6.最終コメ->imageです->no message
    - messages = Message.where(pair_id: currentUsersPair.pair_id)
    - lastMessage = messages.last
    - if lastMessage.blank?
      = "no message yet."
    - else
      - if lastMessage.image.present? && lastMessage.content.blank?
        = "last one is the picture."
      - else
        = lastMessage.content
    %br
    2-7.ペアドア削除リンク
    = link_to "Delete?", pair_path(currentUsersPair.pair_id), class: "paaaaaaaaaa", method: :delete, data: {confirm: "delete this door ?"}



